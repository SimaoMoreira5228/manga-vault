name: CI (Rust)

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  fmt:
    name: "Rust: fmt (nightly)"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Rust (nightly)
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: Run fmt (nightly)
        run: cargo +nightly fmt -- --check
        shell: bash

  clippy:
    name: "Rust: clippy (stable)"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache Cargo registry & git index
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust-ci"
          cache-on-failure: true
          shared-key: "rust-ci-${{ runner.os }}"

      - name: Run clippy (stable)
        run: cargo clippy --all-features --all-targets --no-deps -- -D warnings
        shell: bash

  test:
    name: "Rust: tests"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install OS deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y chromium-chromedriver
        shell: bash

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rust-src

      - name: Cache Cargo registry & git index
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust-ci"
          cache-on-failure: true
          shared-key: "rust-ci-${{ runner.os }}"

      - name: Install cargo-binstall
        run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

      - name: Install cargo-component
        run: cargo binstall -y cargo-component

      - name: Build wasm plugin and run tests
        run: |
          set -euo pipefail
          cargo component build --target wasm32-wasip1 --release --package mangaread_org

          export VAULT_TEST_WASM_PLUGIN="$(pwd)/target/wasm32-wasip1/release/mangaread_org.wasm"
          echo "VAULT_TEST_WASM_PLUGIN=$VAULT_TEST_WASM_PLUGIN"
          export VAULT_TEST_WASM_PLUGIN_MANGA_URL="https://www.mangaread.org/manga/solo-leveling-manhwa/"
          echo "VAULT_TEST_WASM_PLUGIN_MANGA_URL=$VAULT_TEST_WASM_PLUGIN_MANGA_URL"

          chromedriver --port=4444 &
          chromedriver_pid=$!
          trap 'kill $chromedriver_pid 2>/dev/null || true' EXIT

          INSTA_FORCE_PASS=1 cargo test --workspace --all-features -- --nocapture
        shell: bash
