//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "manga_pack_members")]
pub struct Model {
	#[sea_orm(primary_key)]
	pub id: i32,
	pub pack_id: i32,
	pub manga_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "super::manga_packs::Entity",
		from = "Column::PackId",
		to = "super::manga_packs::Column::Id",
		on_update = "NoAction",
		on_delete = "Cascade"
	)]
	MangaPacks,
	#[sea_orm(
		belongs_to = "super::mangas::Entity",
		from = "Column::MangaId",
		to = "super::mangas::Column::Id",
		on_update = "NoAction",
		on_delete = "Cascade"
	)]
	Mangas,
}

impl Related<super::manga_packs::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::MangaPacks.def()
	}
}

impl Related<super::mangas::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Mangas.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
